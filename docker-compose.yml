services:
  server:
    container_name: server
    build:
      context: ./server
    restart: unless-stopped
    ports:
      - "${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}"
    env_file: ./.env
    environment:
      - DB_CONNECTION_STRING=${MONGO_CONNECTION_STRING}
    depends_on:
      - mongodb
      - seq
    volumes:
      - server_public:/app/public/

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "${MONGO_LOCAL_PORT}:${MONGO_DOCKER_PORT}"
    volumes:
      - mongo:/data/db

  seq:
    container_name: seq
    image: datalust/seq:latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SEQ_INGESTION_URL=${SEQ_INGESTION_URL}
    ports:
      - "${SEQ_LOCAL_PORT}:${SEQ_DOCKER_PORT}"
      - "${SEQ_INGESTION_LOCAL_PORT}:${SEQ_INGESTION_DOCKER_PORT}"
    volumes:
      - logs:/data

  client:
    container_name: client
    build:
      context: ./client
    ports:
      - "${REACT_LOCAL_PORT}:${REACT_DOCKER_PORT}"
    volumes:
      - client_build:/app/build

  caddy:
    container_name: caddy
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - client_build:/srv
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - server
      - client

volumes:
  server_public:
  mongo:
  logs:
  client_build:
  caddy_data:
  caddy_config:
